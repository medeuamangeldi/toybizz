interface StyleSelectProps {
  selectedStyle: string;
  customStyle: string;
  onStyleSelect: (style: string) => void;
  onCustomStyleChange: (style: string) => void;
}

export default function StyleSelect({
  selectedStyle,
  customStyle,
  onStyleSelect,
  onCustomStyleChange,
}: StyleSelectProps) {
  const styleOptions = [
    {
      value: "elegant",
      label: "‚ú® –≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π",
      desc: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å —Å —á–µ—Ç–∫–∏–º–∏ –ª–∏–Ω–∏—è–º–∏ –∏ —Å–µ—Ä–∏—Ñ–Ω—ã–º–∏ —à—Ä–∏—Ñ—Ç–∞–º–∏",
    },
    {
      value: "romantic",
      label: "üíï –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π",
      desc: "–ù–µ–∂–Ω—ã–µ —Ç–æ–Ω–∞, —Å–µ—Ä–¥–µ—á–∫–∏ –∏ –∫—Ä—É–≥–ª—ã–µ —Ñ–æ—Ä–º—ã",
    },
    {
      value: "modern",
      label: "üöÄ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π",
      desc: "–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç—Å–∫–∏–π –¥–∏–∑–∞–π–Ω —Å –Ω–µ–æ–Ω–æ–≤—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏ –∏ –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–º–∏ —à—Ä–∏—Ñ—Ç–∞–º–∏",
    },
    {
      value: "luxury",
      label: "üëë –†–æ—Å–∫–æ—à–Ω—ã–π",
      desc: "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –∑–æ–ª–æ—Ç—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏ –∏ –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏",
    },
    {
      value: "nature",
      label: "üåø –ü—Ä–∏—Ä–æ–¥–Ω—ã–π",
      desc: "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–µ–ª–µ–Ω—ã–µ –æ—Ç—Ç–µ–Ω–∫–∏ –∏ –æ—Ä–≥–∞–Ω–∏—á–Ω—ã–µ —Ñ–æ—Ä–º—ã",
    },
    {
      value: "vintage",
      label: "üìú –í–∏–Ω—Ç–∞–∂–Ω—ã–π",
      desc: "–†–µ—Ç—Ä–æ —Å—Ç–∏–ª—å —Å –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Ä–∞–º–∫–∞–º–∏ –∏ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ —à—Ä–∏—Ñ—Ç–∞–º–∏",
    },
    {
      value: "minimalist",
      label: "‚ö™ –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç—Å–∫–∏–π",
      desc: "–ß–∏—Å—Ç—ã–π –±–µ–ª—ã–π –¥–∏–∑–∞–π–Ω —Å —Ç–æ–Ω–∫–∏–º–∏ –ª–∏–Ω–∏—è–º–∏ –∏ –ø—Ä–æ—Å—Ç–æ—Ç–æ–π",
    },
    {
      value: "festive",
      label: "üéâ –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π",
      desc: "–Ø—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞, –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞",
    },
    {
      value: "cosmic",
      label: "‚ú® –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π",
      desc: "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞–º–∏ –∏ —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏",
    },
    {
      value: "bohemian",
      label: "üå∏ –ë–æ–≥–µ–º–Ω—ã–π",
      desc: "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å —Å —Ç–µ–ø–ª—ã–º–∏ —Ç–æ–Ω–∞–º–∏ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞–º–∏",
    },
    {
      value: "custom",
      label: "üé® –ö–∞—Å—Ç–æ–º–Ω—ã–π",
      desc: "–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å",
    },
  ];

  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      {styleOptions.map((style) => (
        <div key={style.value}>
          <button
            onClick={() => onStyleSelect(style.value)}
            className={`w-full p-4 rounded-2xl border-2 transition-all transform hover:scale-105 text-left ${
              selectedStyle === style.value
                ? "border-blue-500 bg-blue-50 shadow-lg"
                : "border-gray-200 hover:border-gray-300 bg-white"
            }`}
          >
            <h3 className="font-bold text-md text-gray-800 mb-2">
              {style.label}
            </h3>
            <p className="text-gray-600 text-sm">{style.desc}</p>
          </button>

          {selectedStyle === "custom" && style.value === "custom" && (
            <div className="mt-4">
              <textarea
                value={customStyle}
                onChange={(e) => onCustomStyleChange(e.target.value)}
                placeholder="–û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Å—Ç–∏–ª—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è..."
                className="w-full p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                rows={4}
              />
            </div>
          )}
        </div>
      ))}
    </div>
  );
}
